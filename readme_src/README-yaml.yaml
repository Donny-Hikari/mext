syntaxes:
  - name: if
    ignored_mext: False
    has_input: True
  - name: for
    ignored_mext: False
    has_input: True
  - name: trim_newline
    ignored_mext: False
    has_input: False
  - name: format
    ignored_mext: False
    has_input: True
  - name: import
    ignored_mext: False
    has_input: True
  - name: include
    ignored_mext: False
    has_input: False
  - name: input
    ignored_mext: True
    has_input: False
  - name: option
    ignored_mext: False
    has_input: False
    result_in_plaintext: True
  - name: set
    ignored_mext: False
    has_input: True
  - name: default
    ignored_mext: False
    has_input: True
  - name: count
    ignored_mext: False
    has_input: True
  - name: comment
    ignored_mext: False
    has_input: False
template_language_usage:
  - name: basic
    title: Basic usage
    intro: To compose a template with Mext, use `Mext.compose`.
  - name: reuse
    title: Reuse template
    intro: You can set a template and use different variables with it.
    has_template: True
  - name: with_template
    title: Use with statement
    intro: You can use `use_template` and `use_params` with the `with` statement.
    has_template: True
  - name: register_formatter
    title: Use custom formatters
    intro: '`register_formatter` is a powerful function that enables custom functions for text processing.'